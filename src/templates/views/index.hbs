<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, user-scalable=no" />
    <!-- CSS only -->
    <link href="https://fonts.googleapis.com/css2?family=Red+Hat+Display:wght@600&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@300&display=swap" rel="stylesheet">


    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="./styles.css">
    <title>DStreet</title>
</head>
<body class="mt-0">
    <div class="big">
        <div class="chart">
            <canvas id="myChart"></canvas>
        </div>
    </div>
    <div class="m-5 title mt-0 justify-content-center align-items-center d-flex">
        <p>DStreet</p>
    </div>
    <p class="h1 mx-5 my-0">D-Reads</p>
    <div class="row justify-content-around mb-5 mt-0 pb-5 pt-0 mx-3 mx-lg-5 align-items-center">
    {{#each arr}}
        <div class="col-sm-12 col-md-6 col-lg-4 d-flex justify-content-center my-4">
            <div class="card content-card">
                <img class="card-img-top img-fluid p-3 img-content" src="{{ this.link }}" alt="Card image cap">
                <div class="card-body">
                    <p class="name h4"><b>{{ this.name }}</b></p>
                    <p class="text h6 mb-4">{{ this.text }}</p>
                </div>
            </div>
        </div>
    {{/each}}
    </div>

    <div class="footer mt-5 p-4">
        {{>footer}}
    </div>



    <!-- JavaScript Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
<script>
    Handlebars.registerHelper('for', function(from, to, incr, block) {
    var accum = '';
    for(var i = from; i < to; i += incr)
        accum += block.fn(i);
    return accum;
});
</script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
const ctx = document.getElementById('myChart').getContext('2d');
// <block:data:2>
const data = [];
let prev = 100;
for (let i = 0; i < 500; i++) {
  prev += 5 - Math.random() * 10;
  data.push({x: i, y: prev});
}
// </block:data>

// <block:animation:1>
const totalDuration = 8000;
const delayBetweenPoints = totalDuration / data.length;
const previousY = (ctx) => ctx.index === 0 ? ctx.chart.scales.y.getPixelForValue(100) : ctx.chart.getDatasetMeta(ctx.datasetIndex).data[ctx.index - 1].getProps(['y'], true).y;
const animation = {
  x: {
    type: 'number',
    easing: 'linear',
    duration: delayBetweenPoints,
    from: NaN, // the point is initially skipped
    delay(ctx) {
      if (ctx.type !== 'data' || ctx.xStarted) {
        return 0;
      }
      ctx.xStarted = true;
      return ctx.index * delayBetweenPoints;
    }
  },
  y: {
    type: 'number',
    easing: 'linear',
    duration: delayBetweenPoints,
    from: previousY,
    delay(ctx) {
      if (ctx.type !== 'data' || ctx.yStarted) {
        return 0;
      }
      ctx.yStarted = true;
      return ctx.index * delayBetweenPoints;
    }
  }
};
// </block:animation>

console.log(animation.x)

// <block:config:0>
const config = {
  type: 'line',
  data: {
    datasets: [{
      borderColor:'red',
      borderWidth: 1,
      radius: 0,
      data: data,
    }]
  },
  options: {
    animation,
    interaction: {
      intersect: false
    },
    plugins: {
      legend: false
    },
    scales: {
      x: {
        type: 'linear'
      }
    }
  }
};
// </block:config>z

const myChart = new Chart(ctx, config)

    </script>
</body>
</html>